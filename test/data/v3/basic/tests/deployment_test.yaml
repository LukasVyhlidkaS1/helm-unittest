suite: test deployment
values:
  - ./values/image.yaml
templates:
  - templates/configmap.yaml
  - templates/deployment.yaml
chart:
  version: 9.9.9+test
  appVersion: 9.9.9
tests:
  - it: should pass all kinds of assertion
    set:
      service.internalPort: 8080
    template: templates/deployment.yaml
    documentIndex: 0
    asserts:
      - equal:
          path: spec.template.spec.containers[?(@.name == "basic")].image
          value: apache:latest
      - notEqual:
          path: spec.template.spec.containers[?(@.name == "basic")].image
          value: nginx:stable
      - equal:
          path: metadata.labels.chart
          value: basic-9.9.9_test
      - equal:
          path: metadata.labels.appVersion
          value: 9.9.9
      - matchRegex:
          path: metadata.name
          pattern: ^.*-basic$
      - notMatchRegex:
          path: metadata.name
          pattern: ^.*-foobar$
      - contains:
          path: spec.template.spec.containers[?(@.name == "basic")].ports
          content:
            containerPort: 8080
      - notContains:
          path: spec.template.spec.containers[?(@.name == "basic")].ports
          content:
            containerPort: 80
      - isNull:
          path: spec.template.nodeSelector
      - isNull:
          path: spec.template.spec.containers[1]
      - isNotNull:
          path: spec.template
      - isEmpty:
          path: spec.template.spec.containers[?(@.name == "basic")].resources
      - isNotEmpty:
          path: spec.template.spec.containers[?(@.name == "basic")]
      - isKind:
          of: Deployment
      - isAPIVersion:
          of: extensions/v1beta1
      - hasDocuments:
          count: 2
      - matchSnapshot:
          path: spec

  - it: should fail if nameOverride is longer than 20 characters
    template: templates/deployment.yaml
    set:
      nameOverride: overridden-name-12345
    asserts:
      - failedTemplate:
          errorMessage: nameOverride cannot be longer than 20 characters

  - it: should fail if service internalPort is missing
    template: templates/deployment.yaml
    set:
      service.internalPort: null
    asserts:
      - failedTemplate:
          errorMessage: service.internalPort is required

  - it: should fail if env is not present
    template: templates/deployment.yaml
    set:
      env: null
    asserts:
      - failedTemplate:
          errorMessage: Value `env` is required.
